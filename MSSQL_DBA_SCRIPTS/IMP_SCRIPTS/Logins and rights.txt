SET ANSI_NULLS ON

GO

SET QUOTED_IDENTIFIER ON

GO

SET ANSI_PADDING ON

GO



-- CREATING A TEMP TABLE TO LOAD WITH DATABASE ROLES



CREATE TABLE [TEMPDB].[DBO].[DB_ROLES](

      [DBNAME] [SYSNAME] ,

      [USERNAME] [SYSNAME] ,

      [DB_OWNER] [VARCHAR](3) ,

      [DB_ACCESSADMIN] [VARCHAR](3) ,

      [DB_SECURITYADMIN] [VARCHAR](3) ,

      [DB_DDLADMIN] [VARCHAR](3) ,

      [DB_DATAREADER] [VARCHAR](3) ,

      [DB_DATAWRITER] [VARCHAR](3) ,

      [DB_DENYDATAREADER] [VARCHAR](3) ,

      [DB_DENYDATAWRITER] [VARCHAR](3) ,

      [DT_CREATE] [DATETIME] NOT NULL,

      [DT_UPDATE] [DATETIME] NOT NULL,

      [DT_REPORT] [DATETIME] NOT NULL CONSTRAINT [DF__DBROLES__CUR_DAT__3A179ED3]  DEFAULT (GETDATE())

) ON [PRIMARY]



GO



INSERT INTO    [TEMPDB].[DBO].[DB_ROLES]

EXEC SP_MSFOREACHDB

'     SELECT 

    ''?'' AS DBNAME,

      USERNAME,

     MAX(CASE ROLENAME WHEN ''DB_OWNER''         THEN ''YES'' ELSE ''NO'' END) AS DB_OWNER,

       MAX(CASE ROLENAME WHEN ''DB_ACCESSADMIN ''   THEN ''YES'' ELSE ''NO'' END) AS DB_ACCESSADMIN ,

       MAX(CASE ROLENAME WHEN ''DB_SECURITYADMIN''  THEN ''YES'' ELSE ''NO'' END) AS DB_SECURITYADMIN,

       MAX(CASE ROLENAME WHEN ''DB_DDLADMIN''   THEN ''YES'' ELSE ''NO'' END) AS DB_DDLADMIN,

       MAX(CASE ROLENAME WHEN ''DB_DATAREADER''        THEN ''YES'' ELSE ''NO'' END) AS DB_DATAREADER,

       MAX(CASE ROLENAME WHEN ''DB_DATAWRITER''        THEN ''YES'' ELSE ''NO'' END) AS DB_DATAWRITER,

     MAX(CASE ROLENAME WHEN ''DB_DENYDATAREADER'' THEN ''YES'' ELSE ''NO'' END) AS DB_DENYDATAREADER,

       MAX(CASE ROLENAME WHEN ''DB_DENYDATAWRITER'' THEN ''YES'' ELSE ''NO'' END) AS DB_DENYDATAWRITER,

       CREATEDATE,

     UPDATEDATE,

       GETDATE()

       FROM (

       SELECT B.NAME AS USERNAME, C.NAME AS ROLENAME, B.CREATEDATE, B.UPDATEDATE

            FROM   

                    [?].DBO.SYSMEMBERS A   JOIN [?].DBO.SYSUSERS  B  ON A.MEMBERUID = B.UID

                        JOIN [?].DBO.SYSUSERS C ON A.GROUPUID = C.UID 

                        )S   

               GROUP BY USERNAME, CREATEDATE, UPDATEDATE

         ORDER BY USERNAME'

-- RETRIVE LOGINS, USERS AND ROLES TOGETHER



SELECT  SERVERPROPERTY('SERVERNAME') AS [SERVERNAME],

B.NAME AS [LOGINNAME],

CASE B.SYSADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS SYSADMIN,

CASE B.SECURITYADMIN WHEN '1' THEN 'YES' ELSE 'NO' END AS SECURITYADMIN,

CASE B.SETUPADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS SETUPADMIN,

CASE B.PROCESSADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS PROCESSADMIN,

CASE B.DISKADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS DISKADMIN,

CASE B.DBCREATOR  WHEN '1' THEN 'YES' ELSE 'NO' END AS DBCREATOR,

CASE B.BULKADMIN  WHEN '1' THEN 'YES' ELSE 'NO' END AS BULKADMIN,

B.DBNAME AS [DEFAULT_DBNAME],

A.* INTO #LOGINS FROM [TEMPDB].[DBO].[DB_ROLES] A RIGHT JOIN MASTER..SYSLOGINS B ON A.USERNAME=B.NAME


--WHERE B.ISNTUSER=1  --INCLUDE TO EXCLUDE THE SQL LOGINS
--select * from sys.server_principals
select a.servername,a.loginname,a.sysadmin,a.SECURITYADMIN,a.SETUPADMIN,a.PROCESSADMIN,a.DISKADMIN,a.dbcreator,a.bulkadmin,a.DEFAULT_DBNAME,b.is_disabled,a.DBNAME,	a.USERNAME,	a.DB_OWNER,	a.DB_ACCESSADMIN,	a.DB_SECURITYADMIN,	a.DB_DDLADMIN,	a.DB_DATAREADER,	a.DB_DATAWRITER,	a.DB_DENYDATAREADER,	a.DB_DENYDATAWRITER,	a.DT_CREATE,	a.DT_UPDATE,	a.DT_REPORT
 from #logins a join sys.server_principals b
on a.[LOGINNAME]=b.name
where b.is_disabled='0'
ORDER BY a.[LOGINNAME]

DROP TABLE  [TEMPDB].[DBO].[DB_ROLES]

DROP TABLE  #LOGINS
--------------SCRIPT END-----------------------
